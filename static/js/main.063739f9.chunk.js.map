{"version":3,"sources":["components/Client/Client.js","components/Business/Business.js","components/Header/Header.js","components/Report/Report.js","App.js","serviceWorker.js","index.js"],"names":["Client","state","editClientModalVisible","setEditClientModalVisible","_this","setState","handleSelect","event","_this$props","props","id","col","changeColumn","value","target","handleSubmit","preventDefault","calculateUrgency","base","budget","val","substring","indexOf","length","getIconType","urgency","type","fill","color","getUrgencyText","_React$createElement","_this2","this","baseClientes","require","icon","urgencyText","concat","popoverContent","react_default","a","createElement","defaultValue","onChange","disabled","hidden","es_button","onClick","className","modal","title","style","top","visible","footer","Object","defineProperty","es_form","layout","onSubmit","input","Group","size","Item","label","name","company","input_number","values","formatter","replace","parser","date_picker","moment","deadline","format","row","justify","htmlType","popover","placement","content","es_icon","theme","trigger","Component","Business","clientModalVisible","firstRun","smallDisplay","window","innerWidth","displayColumn","columnCards","setClientModalVisible","handleResize","_this$state","shouldDiminish","shouldIncrease","selectedIndex","i","fromColumn","toColumn","splice","push","console","log","stage","document","getElementById","childNodes","addEventListener","removeEventListener","column0","map","client","components_Client_Client","key","column1","column2","column3","xs","lg","Header","affix","offsetTop","switchPage","Report","App","page","clients","newClient","components_Header_Header","components_Business_Business","components_Report_Report","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.063739f9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport {\n  Icon,\n  Row,\n  Col,\n  Button,\n  Popover,\n  Modal,\n  Form,\n  Input,\n  InputNumber,\n  DatePicker\n} from \"antd\";\nimport \"./Client.css\";\n\nclass Client extends Component {\n  state = {\n    editClientModalVisible: false\n  };\n  setEditClientModalVisible = editClientModalVisible => {\n    this.setState({ editClientModalVisible });\n  };\n  handleSelect = event => {\n    const { id, col, changeColumn } = this.props;\n    const { value } = event.target;\n    // console.log(`${id} ${col} ${value}`);\n    event.target.value = \"\";\n    changeColumn(id, col, value);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setEditClientModalVisible(false);\n  };\n\n  calculateUrgency = (id, base) => {\n    let { budget } = base[id];\n\n    let val = budget.substring(budget.indexOf(\" \"), budget.length);\n\n    //console.log(val);\n\n    if (val > 150000) {\n      return \"high\";\n    }\n\n    if (val > 80000) {\n      return \"medium\";\n    }\n\n    if (val > 40000) {\n      return \"average\";\n    }\n\n    return \"low\";\n  };\n\n  getIconType = urgency => {\n    if (urgency === \"high\") {\n      return { type: \"info-circle\", fill: \"filled\", color: \"#F95F62\" };\n    }\n    if (urgency === \"medium\") {\n      return { type: \"up-circle\", fill: \"filled\", color: \"#FF9052\" };\n    }\n    if (urgency === \"average\") {\n      return { type: \"minus-circle\", fill: \"filled\", color: \"#FFD185\" };\n    }\n    if (urgency === \"low\") {\n      return { type: \"down-circle\", fill: \"filled\", color: \"#77D353\" };\n    }\n    return { type: \"\", fill: \"\", color: \"\" };\n  };\n\n  getUrgencyText = urgency => {\n    if (urgency === \"high\") {\n      return \"alta\";\n    }\n    if (urgency === \"medium\") {\n      return \"média\";\n    }\n    if (urgency === \"average\") {\n      return \"normal\";\n    }\n    if (urgency === \"low\") {\n      return \"baixa\";\n    }\n    return \"\";\n  };\n\n  render() {\n    const { id } = this.props;\n    const baseClientes = require(\"../../baseClientes.json\");\n\n    let urgency = this.calculateUrgency(id, baseClientes);\n\n    let icon = this.getIconType(urgency);\n\n    let urgencyText = `Urgência ${this.getUrgencyText(urgency)}`;\n\n    const popoverContent = (\n      <div>\n        <br />\n        Mover <br />\n        <select defaultValue=\"\" onChange={this.handleSelect}>\n          <option value=\"\" disabled hidden>\n            Mover para...\n          </option>\n          <option value=\"0\">Clientes potenciais</option>\n          <option value=\"1\">Clientes qualificados</option>\n          <option value=\"2\">Propostas</option>\n          <option value=\"3\">Contrato</option>\n        </select>\n        <br />\n        <Button\n          onClick={() => this.setEditClientModalVisible(true)}\n          className=\"button-card-edit\"\n          icon=\"edit\"\n        >\n          <u>Editar</u>\n        </Button>\n        <Button className=\"button-card-delete\" icon=\"delete\">\n          <u>Excluir</u>\n        </Button>\n      </div>\n    );\n    return (\n      <div className=\"card\" id={`card${id}`}>\n        {/* modal editar cliente */}\n\n        <Modal\n          title=\"20px to Top\"\n          style={{ top: 20 }}\n          visible={this.state.editClientModalVisible}\n          footer={null}\n          title={null}\n          closable={false}\n          onOk={() => this.setEditClientModalVisible(false)}\n          onCancel={() => this.setEditClientModalVisible(false)}\n        >\n          <Form\n            className=\"form-add-client\"\n            layout=\"vertical\"\n            onSubmit={this.handleSubmit}\n          >\n            <h2>Novo cadastro</h2>\n            <Input.Group size=\"large\">\n              <Form.Item label=\"Nome do contato\">\n                <Input\n                  defaultValue={baseClientes[id].name}\n                  type=\"text\"\n                  name=\"name\"\n                />\n              </Form.Item>\n              <Form.Item label=\"Empresa / organização\">\n                <Input\n                  defaultValue={baseClientes[id].company}\n                  type=\"text\"\n                  name=\"company\"\n                />\n              </Form.Item>\n              <Form.Item label=\"Título do negócio\">\n                <Input\n                  defaultValue={baseClientes[id].title}\n                  type=\"text\"\n                  name=\"title\"\n                />\n              </Form.Item>\n              <Form.Item label=\"Valor\">\n                <InputNumber\n                  size=\"large\"\n                  className=\"input-valor\"\n                  name=\"values\"\n                  defaultValue={baseClientes[id].values.substring(\n                    baseClientes[id].values.indexOf(\" \"),\n                    baseClientes[id].values.length\n                  )}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n\n              <hr />\n              <br />\n              <h3>Prioridade</h3>\n\n              <Form.Item label=\"Budget\">\n                <InputNumber\n                  size=\"large\"\n                  name=\"budget\"\n                  className=\"input-valor\"\n                  defaultValue={baseClientes[id].budget.substring(\n                    baseClientes[id].budget.indexOf(\" \"),\n                    baseClientes[id].budget.length\n                  )}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n              <Form.Item label=\"Prazo\">\n                <DatePicker\n                  defaultValue={moment(baseClientes[id].deadline, \"DD/MM/YYYY\")}\n                  id=\"deadline\"\n                  format=\"DD/MM/YYYY\"\n                />\n              </Form.Item>\n            </Input.Group>\n\n            <Row type=\"flex\" justify=\"center\">\n              <Col>\n                <Form.Item>\n                  <Button className=\"submit-button\" htmlType=\"submit\">\n                    Salvar\n                  </Button>\n                </Form.Item>\n              </Col>\n\n              <Col>\n                <Form.Item>\n                  <Button\n                    className=\"cancel-button\"\n                    onClick={() => this.setEditClientModalVisible(false)}\n                  >\n                    <u>Cancelar</u>\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n\n        {/* fim modal editar cliente */}\n\n        <Row type=\"flex\" justify=\"space-between\">\n          <Col>\n            <p className=\"card-name\">{baseClientes[id].name}</p>\n          </Col>\n          <Col>\n            <Popover placement=\"right\" title={null} content={urgencyText}>\n              <Icon\n                style={{ color: icon.color }}\n                className=\"card-icon\"\n                type={icon.type}\n                theme=\"filled\"\n              />\n            </Popover>\n          </Col>\n        </Row>\n        <p className=\"card-company\">{baseClientes[id].company}</p>\n        <hr />\n        <p className=\"card-title\">{baseClientes[id].title}</p>\n        <p className=\"card-values\">{baseClientes[id].values}</p>\n\n        <Row type=\"flex\" justify=\"space-between\">\n          <Col>\n            <Popover\n              placement=\"bottom\"\n              title={null}\n              content={popoverContent}\n              trigger=\"click\"\n            >\n              <Button className=\"button-card-options\">\n                <u>Opções</u>\n              </Button>\n            </Popover>\n          </Col>\n\n          <Col>\n            <Button className=\"button-card-tasks\">Tarefas ></Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nexport default Client;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  InputNumber\n} from \"antd\";\nimport \"./Business.css\";\nimport Client from \"../Client/Client\";\n\nclass Business extends Component {\n  state = {\n    clientModalVisible: false,\n    firstRun: true,\n    smallDisplay: window.innerWidth < 992,\n    displayColumn: [1, 1, 1, 1],\n    columnCards: [[0, 1, 2, 3], [4], [], []]\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  setClientModalVisible = clientModalVisible => {\n    this.setState({ clientModalVisible });\n  };\n\n  handleResize = event => {\n    let { smallDisplay, firstRun } = this.state;\n    let shouldDiminish = window.innerWidth < 992;\n    shouldDiminish = shouldDiminish && !smallDisplay;\n    if (shouldDiminish) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 0, 0, 0]\n      });\n      return;\n    }\n\n    let shouldIncrease = window.innerWidth >= 992;\n    shouldIncrease = shouldIncrease && smallDisplay;\n\n    if (shouldIncrease) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 1, 1, 1]\n      });\n      return;\n    }\n    if (window.innerWidth < 992 && firstRun) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 0, 0, 0]\n      });\n      return;\n    }\n  };\n\n  handleSelect = event => {\n    let { selectedIndex } = event.target;\n    let { displayColumn } = this.state;\n\n    for (let i = 0; i < displayColumn.length; i++) {\n      if (i === selectedIndex) {\n        displayColumn[i] = 1;\n      } else {\n        displayColumn[i] = 0;\n      }\n    }\n\n    this.setState(this.state);\n  };\n\n  changeColumn = (id, fromColumn, toColumn) => {\n    let { columnCards } = this.state;\n    if (fromColumn == toColumn) {\n      return;\n    }\n    columnCards[fromColumn].splice(columnCards[fromColumn].indexOf(id), 1);\n    columnCards[toColumn].push(id);\n    // console.log(`${id} ${fromColumn} ${toColumn}`);\n    // console.log(this.state.columnCards);\n    this.setState(this.state);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(event.target.name.value);\n    console.log(event.target.company.value);\n    console.log(event.target.title.value);\n    console.log(event.target.values.value);\n    console.log(event.target.stage.value);\n    console.log(event.target.budget.value);\n    console.log(\n      document.getElementById(\"deadline\").childNodes[0].childNodes[0].value\n    );\n  };\n\n  render() {\n    const column0 = this.state.columnCards[0].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={0}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column1 = this.state.columnCards[1].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={1}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column2 = this.state.columnCards[2].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={2}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column3 = this.state.columnCards[3].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={3}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    // console.log(column1);\n    return (\n      <div id=\"negocios\">\n        <Button\n          name=\"add-client\"\n          type=\"primary\"\n          className=\"button-add-client\"\n          onClick={() => this.setClientModalVisible(true)}\n        >\n          Adicionar Cadastro\n        </Button>\n        <br />\n\n        {this.state.smallDisplay ? (\n          <div>\n            <br />\n            <select onChange={this.handleSelect}>\n              <option>Clientes potenciais</option>\n              <option>Clientes qualificados</option>\n              <option>Propostas</option>\n              <option>Contrato</option>\n            </select>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {/* modal adicionar cliente */}\n\n        <Modal\n          title=\"20px to Top\"\n          style={{ top: 20 }}\n          visible={this.state.clientModalVisible}\n          footer={null}\n          title={null}\n          closable={false}\n          onOk={() => this.setClientModalVisible(false)}\n          onCancel={() => this.setClientModalVisible(false)}\n        >\n          <Form\n            className=\"form-add-client\"\n            layout=\"vertical\"\n            onSubmit={this.handleSubmit}\n          >\n            <h2>Novo cadastro</h2>\n            <Input.Group size=\"large\">\n              <Form.Item label=\"Nome do contato\">\n                <Input type=\"text\" name=\"name\" />\n              </Form.Item>\n              <Form.Item label=\"Empresa / organização\">\n                <Input type=\"text\" name=\"company\" />\n              </Form.Item>\n              <Form.Item label=\"Título do negócio\">\n                <Input type=\"text\" name=\"title\" />\n              </Form.Item>\n              <Form.Item label=\"Valor\">\n                <InputNumber\n                  size=\"large\"\n                  className=\"input-valor\"\n                  name=\"values\"\n                  defaultValue={0}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n              <Form.Item label=\"Etapa\">\n                <div className=\"select-etapa\">\n                  <select name=\"stage\">\n                    <option>Clientes potenciais</option>\n                    <option>Clientes qualificados</option>\n                    <option>Propostas</option>\n                    <option>Contrato</option>\n                  </select>\n                </div>\n                {/* <Select defaultValue=\"lucy\" onChange=\"\">\n                  <Select.Option value=\"jack\">Jack</Select.Option>\n                  <Select.Option value=\"lucy\">Lucy</Select.Option>\n                  <Select.Option value=\"disabled\">Disabled</Select.Option>\n                  <Select.Option value=\"Yiminghe\">yiminghe</Select.Option>\n                </Select> */}\n              </Form.Item>\n              <hr />\n              <br />\n              <h3>Prioridade</h3>\n\n              <Form.Item label=\"Budget\">\n                <InputNumber\n                  size=\"large\"\n                  name=\"budget\"\n                  className=\"input-valor\"\n                  defaultValue={0}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n              <Form.Item label=\"Prazo\">\n                <DatePicker id=\"deadline\" format=\"DD/MM/YYYY\" />\n              </Form.Item>\n            </Input.Group>\n\n            <Row type=\"flex\" justify=\"center\">\n              <Col>\n                <Form.Item>\n                  <Button className=\"submit-button\" htmlType=\"submit\">\n                    Salvar\n                  </Button>\n                </Form.Item>\n              </Col>\n\n              <Col>\n                <Form.Item>\n                  <Button\n                    className=\"cancel-button\"\n                    onClick={() => this.setClientModalVisible(false)}\n                  >\n                    <u>Cancelar</u>\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n\n        {/* fim modal adicionar cliente */}\n\n        {/* titulo das colunas */}\n\n        <Row className=\"row-title\">\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[0]}\n            lg={5 * this.state.displayColumn[0]}\n          >\n            <p>\n              <br />\n              Clientes potenciais\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1} />\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[1]}\n            lg={5 * this.state.displayColumn[1]}\n          >\n            <p>\n              <br />\n              Clientes qualificados\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1} />\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[2]}\n            lg={5 * this.state.displayColumn[2]}\n          >\n            <p>\n              <br />\n              Propostas\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1} />\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[3]}\n            lg={5 * this.state.displayColumn[3]}\n          >\n            <p>\n              <br />\n              Contrato\n            </p>\n          </Col>\n        </Row>\n\n        {/* fim do titulo das colunas */}\n\n        {/* colunas */}\n\n        <Row className=\"row\">\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[0]}\n            lg={5 * this.state.displayColumn[0]}\n          >\n            {column0}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[1]}\n            lg={5 * this.state.displayColumn[1]}\n          >\n            {column1}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[2]}\n            lg={5 * this.state.displayColumn[2]}\n          >\n            {column2}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[3]}\n            lg={5 * this.state.displayColumn[3]}\n          >\n            {column3}\n          </Col>\n        </Row>\n\n        {/* fim das colunas */}\n      </div>\n    );\n  }\n}\nexport default Business;\n","import React, { Component } from \"react\";\nimport { Button, Row, Col, Affix } from \"antd\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <Affix offsetTop={0}>\n        <div id=\"header\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col>\n              <p>Logo</p>\n            </Col>\n            <Col>\n              <Button\n                className=\"button-nav\"\n                onClick={() => this.props.switchPage(\"business\")}\n              >\n                Negócios\n              </Button>\n\n              <Button\n                className=\"button-nav\"\n                onClick={() => this.props.switchPage(\"report\")}\n              >\n                Relatórios\n              </Button>\n              <Button className=\"button-search\" icon=\"search\" />\n            </Col>\n          </Row>\n        </div>\n      </Affix>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Button, Row, Col } from \"antd\";\nimport \"./Report.css\";\n\nclass Report extends Component {\n  render() {\n    return (\n      <div id=\"report\">\n        <h1>Novo relatório</h1>\n        <hr />\n        <Row type=\"flex\" justify=\"start\" className=\"selectors\">\n          <Col>\n            <select className=\"selector\">\n              <option>Cadastros</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Período</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Status</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Valor</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Orçamento</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Prazo</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Prioridade</option>\n            </select>\n          </Col>\n        </Row>\n        <br />\n        <Button type=\"primary\">Exportar</Button>\n      </div>\n    );\n  }\n}\nexport default Report;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Business from \"./components/Business/Business\";\nimport Header from \"./components/Header/Header\";\nimport Report from \"./components/Report/Report\";\n\n// class client {\n//   constructor(name, company) {\n//     this.name = name;\n//     this.company = company;\n//   }\n// }\n\nclass App extends Component {\n  state = {\n    page: \"business\",\n    clients: require(\"./baseClientes.json\")\n  };\n\n  newClient = client => {\n    this.state.clients.push(client);\n    this.setState(this.state);\n  };\n\n  switchPage = page => {\n    this.setState({ page: page });\n  };\n\n  render() {\n    //console.log(this.state);\n    return (\n      <div className=\"App\">\n        <Header switchPage={this.switchPage} />\n        {this.state.page === \"business\" ? <Business /> : \"\"}\n        {this.state.page === \"report\" ? <Report /> : \"\"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}