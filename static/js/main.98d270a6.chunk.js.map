{"version":3,"sources":["components/Balloon/Balloon.js","components/Client/Client.js","components/Business/Business.js","components/Header/Header.js","components/Report/Report.js","App.js","serviceWorker.js","index.js"],"names":["TextArea","Balloon","state","addingTask","visible","modalVisible","handleSwitchTask","_this","setState","addingTasks","handleVisibleChange","showModal","handleOk","e","console","log","handleCancel","react_default","a","createElement","popover","className","content","this","es_button","onClick","title","trigger","placement","onVisibleChange","modal","onOk","onCancel","zIndex","es_form","Item","name","date_picker","label","size","time_picker","defaultValue","moment","format","rows","Component","Client","editClientModalVisible","setEditClientModalVisible","handleSelect","event","_this$props","props","id","col","changeColumn","value","target","handleSubmit","preventDefault","calculateUrgency","base","budget","val","substring","indexOf","length","getIconType","urgency","type","fill","color","_React$createElement","_this2","baseClientes","require","icon","popoverContent","onChange","disabled","hidden","concat","style","top","footer","Object","defineProperty","layout","onSubmit","input","Group","company","input_number","values","formatter","replace","parser","deadline","row","justify","htmlType","es_icon","theme","components_Balloon_Balloon","Business","clientModalVisible","firstRun","smallDisplay","window","innerWidth","displayColumn","columnCards","setClientModalVisible","handleResize","_this$state","shouldDiminish","shouldIncrease","selectedIndex","i","fromColumn","toColumn","splice","push","stage","document","getElementById","childNodes","addEventListener","removeEventListener","column0","map","client","components_Client_Client","key","column1","column2","column3","xs","lg","Header","affix","offsetTop","switchPage","Report","span","offset","App","page","clients","newClient","components_Header_Header","components_Business_Business","components_Report_Report","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98d270a6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Balloon.css\";\nimport moment from \"moment\";\nimport {\n  Button,\n  Popover,\n  Form,\n  Input,\n  Modal,\n  DatePicker,\n  MonthPicker,\n  RangePicker,\n  WeekPicker,\n  TimePicker\n} from \"antd\";\nconst { TextArea } = Input;\n\nclass Balloon extends Component {\n  state = {\n    addingTask: false,\n    visible: false,\n    modalVisible: false\n  };\n\n  handleSwitchTask = () => {\n    this.setState({\n      addingTask: !this.state.addingTasks\n    });\n  };\n\n  handleVisibleChange = visible => {\n    this.setState({\n      visible: visible\n    });\n\n    if (visible) {\n      this.state.addingTask = false;\n    }\n  };\n\n  showModal = () => {\n    this.setState({\n      modalVisible: true\n    });\n  };\n\n  handleOk = e => {\n    console.log(e);\n    this.setState({\n      modalVisible: false\n    });\n  };\n\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      modalVisible: false\n    });\n  };\n\n  render() {\n    return (\n      <Popover\n        className=\"button-card-tasks\"\n        content={\n          this.state.addingTask ? (\n            \"\"\n          ) : (\n            <Button onClick={(this.handleSwitchTask, this.showModal)}>\n              Adicionar tarefa\n            </Button>\n          )\n        }\n        title={null}\n        trigger=\"click\"\n        placement=\"right\"\n        visible={this.state.visible}\n        onVisibleChange={this.handleVisibleChange}\n      >\n        <Button>Tarefa ></Button>\n        {/* modal adicionar tarefa */}\n\n        <div>\n          <Modal\n            visible={this.state.modalVisible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            zIndex={1050}\n          >\n            <Form.Item>\n              <div className=\"select-etapa\">\n                <select name=\"stage\">\n                  <option>A</option>\n                  <option>B</option>\n                  <option>C</option>\n                  <option>D</option>\n                </select>\n              </div>\n            </Form.Item>\n            <Form.Item>\n              <div>\n                <DatePicker label=\"Em\" size=\"large\" />\n              </div>\n            </Form.Item>\n            <Form.Item>\n              <div>\n                <TimePicker\n                  defaultValue={moment(\"12:08\", \"HH:mm\")}\n                  format={\"HH:mm\"}\n                  size=\"large\"\n                />\n              </div>\n            </Form.Item>\n            <Form.Item>\n              <div className=\"select-etapa\" label=\"Atribuido à\">\n                <select name=\"stage\">\n                  <option>Geral</option>\n                  <option>Particular</option>\n                  <option>Público</option>\n                  <option>Filler</option>\n                </select>\n              </div>\n            </Form.Item>\n            <Form.Item>\n              <div className=\"select-etapa\">\n                <TextArea rows={4} />\n              </div>\n            </Form.Item>\n          </Modal>\n        </div>\n      </Popover>\n    );\n  }\n}\n\nexport default Balloon;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport {\n  Icon,\n  Row,\n  Col,\n  Button,\n  Popover,\n  Modal,\n  Form,\n  Input,\n  InputNumber,\n  DatePicker\n} from \"antd\";\nimport \"./Client.css\";\nimport Balloon from \"../Balloon/Balloon\";\n\nclass Client extends Component {\n  state = {\n    editClientModalVisible: false\n  };\n  setEditClientModalVisible = editClientModalVisible => {\n    this.setState({ editClientModalVisible });\n  };\n  handleSelect = event => {\n    const { id, col, changeColumn } = this.props;\n    const { value } = event.target;\n    // console.log(`${id} ${col} ${value}`);\n    event.target.value = \"\";\n    changeColumn(id, col, value);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setEditClientModalVisible(false);\n  };\n\n  calculateUrgency = (id, base) => {\n    let { budget } = base[id];\n\n    let val = budget.substring(budget.indexOf(\" \"), budget.length);\n\n    //console.log(val);\n\n    if (val > 150000) {\n      return \"high\";\n    }\n\n    if (val > 80000) {\n      return \"medium\";\n    }\n\n    if (val > 40000) {\n      return \"average\";\n    }\n\n    return \"low\";\n  };\n\n  getIconType = urgency => {\n    if (urgency === \"high\") {\n      return { type: \"info-circle\", fill: \"filled\", color: \"#F95F62\" };\n    }\n    if (urgency === \"medium\") {\n      return { type: \"up-circle\", fill: \"filled\", color: \"#FF9052\" };\n    }\n    if (urgency === \"average\") {\n      return { type: \"minus-circle\", fill: \"filled\", color: \"#FFD185\" };\n    }\n    if (urgency === \"low\") {\n      return { type: \"down-circle\", fill: \"filled\", color: \"#77D353\" };\n    }\n    return { type: \"\", fill: \"\", color: \"\" };\n  };\n\n  render() {\n    const { id } = this.props;\n    const baseClientes = require(\"../../baseClientes.json\");\n\n    let urgency = this.calculateUrgency(id, baseClientes);\n\n    let icon = this.getIconType(urgency);\n\n    const popoverContent = (\n      <div>\n        <br />\n        Mover <br />\n        <select defaultValue=\"\" onChange={this.handleSelect}>\n          <option value=\"\" disabled hidden>\n            Mover para...\n          </option>\n          <option value=\"0\">Clientes potenciais</option>\n          <option value=\"1\">Clientes qualificados</option>\n          <option value=\"2\">Propostas</option>\n          <option value=\"3\">Contrato</option>\n        </select>\n        <br />\n        <Button\n          onClick={() => this.setEditClientModalVisible(true)}\n          className=\"button-card-edit\"\n          icon=\"edit\"\n        >\n          <u>Editar</u>\n        </Button>\n        <Button className=\"button-card-delete\" icon=\"delete\">\n          <u>Excluir</u>\n        </Button>\n      </div>\n    );\n    return (\n      <div className=\"card\" id={`card${id}`}>\n        {/* modal editar cliente */}\n\n        <Modal\n          title=\"20px to Top\"\n          style={{ top: 20 }}\n          visible={this.state.editClientModalVisible}\n          footer={null}\n          title={null}\n          closable={false}\n          onOk={() => this.setEditClientModalVisible(false)}\n          onCancel={() => this.setEditClientModalVisible(false)}\n        >\n          <Form\n            className=\"form-add-client\"\n            layout=\"vertical\"\n            onSubmit={this.handleSubmit}\n          >\n            <h2>Novo cadastro</h2>\n            <Input.Group size=\"large\">\n              <Form.Item label=\"Nome do contato\">\n                <Input\n                  defaultValue={baseClientes[id].name}\n                  type=\"text\"\n                  name=\"name\"\n                />\n              </Form.Item>\n              <Form.Item label=\"Empresa / organização\">\n                <Input\n                  defaultValue={baseClientes[id].company}\n                  type=\"text\"\n                  name=\"company\"\n                />\n              </Form.Item>\n              <Form.Item label=\"Título do negócio\">\n                <Input\n                  defaultValue={baseClientes[id].title}\n                  type=\"text\"\n                  name=\"title\"\n                />\n              </Form.Item>\n              <Form.Item label=\"Valor\">\n                <InputNumber\n                  size=\"large\"\n                  className=\"input-valor\"\n                  name=\"values\"\n                  defaultValue={baseClientes[id].values.substring(\n                    baseClientes[id].values.indexOf(\" \"),\n                    baseClientes[id].values.length\n                  )}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n\n              <hr />\n              <br />\n              <h3>Prioridade</h3>\n\n              <Form.Item label=\"Budget\">\n                <InputNumber\n                  size=\"large\"\n                  name=\"budget\"\n                  className=\"input-valor\"\n                  defaultValue={baseClientes[id].budget.substring(\n                    baseClientes[id].budget.indexOf(\" \"),\n                    baseClientes[id].budget.length\n                  )}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n              <Form.Item label=\"Prazo\">\n                <DatePicker\n                  defaultValue={moment(baseClientes[id].deadline, \"DD/MM/YYYY\")}\n                  id=\"deadline\"\n                  format=\"DD/MM/YYYY\"\n                />\n              </Form.Item>\n            </Input.Group>\n\n            <Row type=\"flex\" justify=\"center\">\n              <Col>\n                <Form.Item>\n                  <Button className=\"submit-button\" htmlType=\"submit\">\n                    Salvar\n                  </Button>\n                </Form.Item>\n              </Col>\n\n              <Col>\n                <Form.Item>\n                  <Button\n                    className=\"cancel-button\"\n                    onClick={() => this.setEditClientModalVisible(false)}\n                  >\n                    <u>Cancelar</u>\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n\n        {/* fim modal editar cliente */}\n\n        <Row type=\"flex\" justify=\"space-between\">\n          <Col>\n            <p className=\"card-name\">{baseClientes[id].name}</p>\n          </Col>\n          <Col>\n            <Popover placement=\"right\" title={null} content=\"Urgência média\">\n              <Icon\n                style={{ color: icon.color }}\n                className=\"card-icon\"\n                type={icon.type}\n                theme=\"filled\"\n              />\n            </Popover>\n          </Col>\n        </Row>\n        <p className=\"card-company\">{baseClientes[id].company}</p>\n        <hr />\n        <p className=\"card-title\">{baseClientes[id].title}</p>\n        <p className=\"card-values\">{baseClientes[id].values}</p>\n\n        <Row type=\"flex\" justify=\"space-between\">\n          <Col>\n            <Popover\n              placement=\"bottom\"\n              title={null}\n              content={popoverContent}\n              trigger=\"click\"\n            >\n              <Button className=\"button-card-options\">\n                <u>Opções</u>\n              </Button>\n            </Popover>\n          </Col>\n\n          <Col>\n            <Balloon />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nexport default Client;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  InputNumber,\n  Icon\n} from \"antd\";\nimport \"./Business.css\";\nimport Client from \"../Client/Client\";\n\nclass Business extends Component {\n  state = {\n    clientModalVisible: false,\n    firstRun: true,\n    smallDisplay: window.innerWidth < 992,\n    displayColumn: [1, 1, 1, 1],\n    columnCards: [[0, 1, 2, 3], [4], [], []]\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  setClientModalVisible = clientModalVisible => {\n    this.setState({ clientModalVisible });\n  };\n\n  handleResize = event => {\n    let { smallDisplay, firstRun } = this.state;\n    let shouldDiminish = window.innerWidth < 992;\n    shouldDiminish = shouldDiminish && !smallDisplay;\n    if (shouldDiminish) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 0, 0, 0]\n      });\n      return;\n    }\n\n    let shouldIncrease = window.innerWidth >= 992;\n    shouldIncrease = shouldIncrease && smallDisplay;\n\n    if (shouldIncrease) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 1, 1, 1]\n      });\n      return;\n    }\n    if (window.innerWidth < 992 && firstRun) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 0, 0, 0]\n      });\n      return;\n    }\n  };\n\n  handleSelect = event => {\n    let { selectedIndex } = event.target;\n    let { displayColumn } = this.state;\n\n    for (let i = 0; i < displayColumn.length; i++) {\n      if (i === selectedIndex) {\n        displayColumn[i] = 1;\n      } else {\n        displayColumn[i] = 0;\n      }\n    }\n\n    this.setState(this.state);\n  };\n\n  changeColumn = (id, fromColumn, toColumn) => {\n    let { columnCards } = this.state;\n    if (fromColumn == toColumn) {\n      return;\n    }\n    columnCards[fromColumn].splice(columnCards[fromColumn].indexOf(id), 1);\n    columnCards[toColumn].push(id);\n    // console.log(`${id} ${fromColumn} ${toColumn}`);\n    // console.log(this.state.columnCards);\n    this.setState(this.state);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(event.target.name.value);\n    console.log(event.target.company.value);\n    console.log(event.target.title.value);\n    console.log(event.target.values.value);\n    console.log(event.target.stage.value);\n    console.log(event.target.budget.value);\n    console.log(\n      document.getElementById(\"deadline\").childNodes[0].childNodes[0].value\n    );\n  };\n\n  render() {\n    const column0 = this.state.columnCards[0].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={0}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column1 = this.state.columnCards[1].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={1}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column2 = this.state.columnCards[2].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={2}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column3 = this.state.columnCards[3].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={3}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    // console.log(column1);\n    return (\n      <div id=\"negocios\">\n        <Button\n          name=\"add-client\"\n          type=\"primary\"\n          className=\"button-add-client\"\n          onClick={() => this.setClientModalVisible(true)}\n        >\n          Adicionar Cadastro\n        </Button>\n        <br />\n\n        {this.state.smallDisplay ? (\n          <div>\n            <br />\n            <select onChange={this.handleSelect}>\n              <option>Clientes potenciais</option>\n              <option>Clientes qualificados</option>\n              <option>Propostas</option>\n              <option>Contrato</option>\n            </select>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {/* modal adicionar cliente */}\n\n        <Modal\n          title=\"20px to Top\"\n          style={{ top: 20 }}\n          visible={this.state.clientModalVisible}\n          footer={null}\n          title={null}\n          closable={false}\n          onOk={() => this.setClientModalVisible(false)}\n          onCancel={() => this.setClientModalVisible(false)}\n        >\n          <Form\n            className=\"form-add-client\"\n            layout=\"vertical\"\n            onSubmit={this.handleSubmit}\n          >\n            <h2>Novo cadastro</h2>\n            <Input.Group size=\"large\">\n              <Form.Item label=\"Nome do contato\">\n                <Input type=\"text\" name=\"name\" />\n              </Form.Item>\n              <Form.Item label=\"Empresa / organização\">\n                <Input type=\"text\" name=\"company\" />\n              </Form.Item>\n              <Form.Item label=\"Título do negócio\">\n                <Input type=\"text\" name=\"title\" />\n              </Form.Item>\n              <Form.Item label=\"Valor\">\n                <InputNumber\n                  size=\"large\"\n                  className=\"input-valor\"\n                  name=\"values\"\n                  defaultValue={0}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n              <Form.Item label=\"Etapa\">\n                <div className=\"select-etapa\">\n                  <select name=\"stage\">\n                    <option>Clientes potenciais</option>\n                    <option>Clientes qualificados</option>\n                    <option>Propostas</option>\n                    <option>Contrato</option>\n                  </select>\n                </div>\n                {/* <Select defaultValue=\"lucy\" onChange=\"\">\n                  <Select.Option value=\"jack\">Jack</Select.Option>\n                  <Select.Option value=\"lucy\">Lucy</Select.Option>\n                  <Select.Option value=\"disabled\">Disabled</Select.Option>\n                  <Select.Option value=\"Yiminghe\">yiminghe</Select.Option>\n                </Select> */}\n              </Form.Item>\n              <hr />\n              <br />\n              <h3>Prioridade</h3>\n\n              <Form.Item label=\"Budget\">\n                <InputNumber\n                  size=\"large\"\n                  name=\"budget\"\n                  className=\"input-valor\"\n                  defaultValue={0}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n              <Form.Item label=\"Prazo\">\n                <DatePicker id=\"deadline\" format=\"DD/MM/YYYY\" />\n              </Form.Item>\n            </Input.Group>\n\n            <Row type=\"flex\" justify=\"center\">\n              <Col>\n                <Form.Item>\n                  <Button className=\"submit-button\" htmlType=\"submit\">\n                    Salvar\n                  </Button>\n                </Form.Item>\n              </Col>\n\n              <Col>\n                <Form.Item>\n                  <Button\n                    className=\"cancel-button\"\n                    onClick={() => this.setClientModalVisible(false)}\n                  >\n                    <u>Cancelar</u>\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n\n        {/* fim modal adicionar cliente */}\n\n        {/* titulo das colunas */}\n\n        <Row className=\"row-title\" type=\"flex\" justify=\"center\">\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[0]}\n            lg={5 * this.state.displayColumn[0]}\n          >\n            <p>\n              <br />\n              Clientes potenciais\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1}>\n            <Icon type=\"right\" />\n          </Col>\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[1]}\n            lg={5 * this.state.displayColumn[1]}\n          >\n            <p>\n              <br />\n              Clientes qualificados\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1} />\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[2]}\n            lg={5 * this.state.displayColumn[2]}\n          >\n            <p>\n              <br />\n              Propostas\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1} />\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[3]}\n            lg={5 * this.state.displayColumn[3]}\n          >\n            <p>\n              <br />\n              Contrato\n            </p>\n          </Col>\n        </Row>\n\n        {/* fim do titulo das colunas */}\n\n        {/* colunas */}\n\n        <Row className=\"row\" type=\"flex\" justify=\"center\">\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[0]}\n            lg={5 * this.state.displayColumn[0]}\n          >\n            {column0}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[1]}\n            lg={5 * this.state.displayColumn[1]}\n          >\n            {column1}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[2]}\n            lg={5 * this.state.displayColumn[2]}\n          >\n            {column2}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[3]}\n            lg={5 * this.state.displayColumn[3]}\n          >\n            {column3}\n          </Col>\n        </Row>\n\n        {/* fim das colunas */}\n      </div>\n    );\n  }\n}\nexport default Business;\n","import React, { Component } from \"react\";\nimport { Button, Row, Col, Affix } from \"antd\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <Affix offsetTop={0}>\n        <div id=\"header\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col>\n              <p>Logo</p>\n            </Col>\n            <Col>\n              <Button\n                className=\"button-nav\"\n                onClick={() => this.props.switchPage(\"business\")}\n              >\n                Negócios\n              </Button>\n\n              <Button\n                className=\"button-nav\"\n                onClick={() => this.props.switchPage(\"report\")}\n              >\n                Relatórios\n              </Button>\n              <Button className=\"button-search\" icon=\"search\" />\n            </Col>\n          </Row>\n        </div>\n      </Affix>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Button, Row, Col } from \"antd\";\nimport \"./Report.css\";\n\nclass Report extends Component {\n  render() {\n    return (\n      <div id=\"report\">\n        <Row type=\"flex\">\n          <Col span={18} offset={2}>\n            <h1>Novo relatório</h1>\n          </Col>\n        </Row>\n\n        <hr />\n        <Row type=\"flex\" justify=\"center\" className=\"selectors\">\n          <Col>\n            <select className=\"selector\">\n              <option>Cadastros</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Período</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Status</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Valor</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Orçamento</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Prazo</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Prioridade</option>\n            </select>\n          </Col>\n        </Row>\n        <br />\n        <Button type=\"primary\" className=\"button-export\">\n          Exportar\n        </Button>\n      </div>\n    );\n  }\n}\nexport default Report;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Business from \"./components/Business/Business\";\nimport Header from \"./components/Header/Header\";\nimport Report from \"./components/Report/Report\";\n\n// class client {\n//   constructor(name, company) {\n//     this.name = name;\n//     this.company = company;\n//   }\n// }\n\nclass App extends Component {\n  state = {\n    page: \"business\",\n    clients: require(\"./baseClientes.json\")\n  };\n\n  newClient = client => {\n    this.state.clients.push(client);\n    this.setState(this.state);\n  };\n\n  switchPage = page => {\n    this.setState({ page: page });\n  };\n\n  render() {\n    //console.log(this.state);\n    return (\n      <div className=\"App\">\n        <Header switchPage={this.switchPage} />\n        {this.state.page === \"business\" ? <Business /> : \"\"}\n        {this.state.page === \"report\" ? <Report /> : \"\"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}