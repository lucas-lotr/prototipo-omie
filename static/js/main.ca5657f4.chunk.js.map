{"version":3,"sources":["components/Client/Client.js","components/Business/Business.js","App.js","serviceWorker.js","index.js"],"names":["Client","handleSelect","event","_this$props","_this","props","id","col","changeColumn","value","target","this","baseClientes","require","popoverContent","react_default","a","createElement","defaultValue","onChange","disabled","hidden","es_button","className","icon","concat","row","type","justify","name","popover","placement","title","content","theme","company","values","trigger","Component","Business","state","clientModalVisible","firstRun","smallDisplay","window","innerWidth","displayColumn","columnCards","setClientModalVisible","setState","handleResize","_this$state","shouldDiminish","shouldIncrease","selectedIndex","i","length","fromColumn","toColumn","splice","indexOf","push","handleSubmit","preventDefault","console","log","stage","budget","document","getElementById","childNodes","addEventListener","removeEventListener","_React$createElement","_this2","column0","map","client","components_Client_Client","key","column1","column2","column3","onClick","modal","style","top","visible","footer","Object","defineProperty","es_form","layout","onSubmit","input","Group","size","Item","label","input_number","formatter","replace","parser","date_picker","format","htmlType","xs","lg","App","page","clients","newClient","components_Business_Business","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca5657f4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Client.css\";\nimport { Icon, Row, Col, Button, Popover, Tooltip } from \"antd\";\n\nclass Client extends Component {\n  handleSelect = event => {\n    const { id, col, changeColumn } = this.props;\n    const { value } = event.target;\n    // console.log(`${id} ${col} ${value}`);\n    event.target.value = \"\";\n    changeColumn(id, col, value);\n  };\n  render() {\n    const { id } = this.props;\n    const baseClientes = require(\"../../baseClientes.json\");\n    const popoverContent = (\n      <div>\n        <br />\n        Mover <br />\n        <select defaultValue=\"\" onChange={this.handleSelect}>\n          <option value=\"\" disabled hidden>\n            Mover para...\n          </option>\n          <option value=\"0\">Clientes potenciais</option>\n          <option value=\"1\">Clientes qualificados</option>\n          <option value=\"2\">Propostas</option>\n          <option value=\"3\">Contrato</option>\n        </select>\n        <br />\n        <Button className=\"button-card-delete\" icon=\"delete\">\n          <u>Excluir</u>\n        </Button>\n      </div>\n    );\n    return (\n      <div className=\"card\" id={`card${id}`}>\n        <Row type=\"flex\" justify=\"space-between\">\n          <Col>\n            <p className=\"card-name\">{baseClientes[id].name}</p>\n          </Col>\n          <Col>\n            <Popover placement=\"right\" title={null} content=\"Urgência média\">\n              <Icon className=\"card-icon\" type=\"up-circle\" theme=\"filled\" />\n            </Popover>\n          </Col>\n        </Row>\n        <p className=\"card-company\">{baseClientes[id].company}</p>\n        <hr />\n        <p className=\"card-title\">{baseClientes[id].title}</p>\n        <p className=\"card-values\">{baseClientes[id].values}</p>\n\n        <Row type=\"flex\" justify=\"space-between\">\n          <Col>\n            <Popover\n              placement=\"bottom\"\n              title={null}\n              content={popoverContent}\n              trigger=\"click\"\n            >\n              <Button className=\"button-card-options\">\n                <u>Opções</u>\n              </Button>\n            </Popover>\n          </Col>\n\n          <Col>\n            <Button className=\"button-card-tasks\">Tarefas ></Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nexport default Client;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  InputNumber\n} from \"antd\";\nimport \"./Business.css\";\nimport Client from \"../Client/Client\";\n\nclass Business extends Component {\n  state = {\n    clientModalVisible: false,\n    firstRun: true,\n    smallDisplay: window.innerWidth < 992,\n    displayColumn: [1, 1, 1, 1],\n    columnCards: [[0, 1, 2], [], [], []]\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  setClientModalVisible = clientModalVisible => {\n    this.setState({ clientModalVisible });\n  };\n\n  handleResize = event => {\n    let { smallDisplay, firstRun } = this.state;\n    let shouldDiminish = window.innerWidth < 992;\n    shouldDiminish = shouldDiminish && !smallDisplay;\n    if (shouldDiminish) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 0, 0, 0]\n      });\n      return;\n    }\n\n    let shouldIncrease = window.innerWidth >= 992;\n    shouldIncrease = shouldIncrease && smallDisplay;\n\n    if (shouldIncrease) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 1, 1, 1]\n      });\n      return;\n    }\n    if (window.innerWidth < 992 && firstRun) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 0, 0, 0]\n      });\n      return;\n    }\n  };\n\n  handleSelect = event => {\n    let { selectedIndex } = event.target;\n    let { displayColumn } = this.state;\n\n    for (let i = 0; i < displayColumn.length; i++) {\n      if (i === selectedIndex) {\n        displayColumn[i] = 1;\n      } else {\n        displayColumn[i] = 0;\n      }\n    }\n\n    this.setState(this.state);\n  };\n\n  changeColumn = (id, fromColumn, toColumn) => {\n    let { columnCards } = this.state;\n    if (fromColumn == toColumn) {\n      return;\n    }\n    columnCards[fromColumn].splice(columnCards[fromColumn].indexOf(id), 1);\n    columnCards[toColumn].push(id);\n    // console.log(`${id} ${fromColumn} ${toColumn}`);\n    // console.log(this.state.columnCards);\n    this.setState(this.state);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(event.target.name.value);\n    console.log(event.target.company.value);\n    console.log(event.target.title.value);\n    console.log(event.target.values.value);\n    console.log(event.target.stage.value);\n    console.log(event.target.budget.value);\n    console.log(\n      document.getElementById(\"deadline\").childNodes[0].childNodes[0].value\n    );\n  };\n\n  render() {\n    const column0 = this.state.columnCards[0].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={0}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column1 = this.state.columnCards[1].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={1}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column2 = this.state.columnCards[2].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={2}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column3 = this.state.columnCards[3].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={3}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    // console.log(column1);\n    return (\n      <div id=\"negocios\">\n        <Button\n          name=\"add-client\"\n          type=\"primary\"\n          className=\"button-add-client\"\n          onClick={() => this.setClientModalVisible(true)}\n        >\n          Adicionar Cadastro\n        </Button>\n        <br />\n\n        {this.state.smallDisplay ? (\n          <div>\n            <br />\n            <select onChange={this.handleSelect}>\n              <option>Clientes potenciais</option>\n              <option>Clientes qualificados</option>\n              <option>Propostas</option>\n              <option>Contrato</option>\n            </select>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {/* modal adicionar cliente */}\n\n        <Modal\n          title=\"20px to Top\"\n          style={{ top: 20 }}\n          visible={this.state.clientModalVisible}\n          footer={null}\n          title={null}\n          closable={false}\n          onOk={() => this.setClientModalVisible(false)}\n          onCancel={() => this.setClientModalVisible(false)}\n        >\n          <Form\n            className=\"form-add-client\"\n            layout=\"vertical\"\n            onSubmit={this.handleSubmit}\n          >\n            <h2>Novo cadastro</h2>\n            <Input.Group size=\"large\">\n              <Form.Item label=\"Nome do contato\">\n                <Input type=\"text\" name=\"name\" />\n              </Form.Item>\n              <Form.Item label=\"Empresa / organização\">\n                <Input type=\"text\" name=\"company\" />\n              </Form.Item>\n              <Form.Item label=\"Título do negócio\">\n                <Input type=\"text\" name=\"title\" />\n              </Form.Item>\n              <Form.Item label=\"Valor\">\n                <InputNumber\n                  size=\"large\"\n                  className=\"input-valor\"\n                  name=\"values\"\n                  defaultValue={0}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$\", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n              <Form.Item label=\"Etapa\">\n                <div className=\"select-etapa\">\n                  <select name=\"stage\">\n                    <option>Clientes potenciais</option>\n                    <option>Clientes qualificados</option>\n                    <option>Propostas</option>\n                    <option>Contrato</option>\n                  </select>\n                </div>\n                {/* <Select defaultValue=\"lucy\" onChange=\"\">\n                  <Select.Option value=\"jack\">Jack</Select.Option>\n                  <Select.Option value=\"lucy\">Lucy</Select.Option>\n                  <Select.Option value=\"disabled\">Disabled</Select.Option>\n                  <Select.Option value=\"Yiminghe\">yiminghe</Select.Option>\n                </Select> */}\n              </Form.Item>\n              <hr />\n              <br />\n              <h3>Prioridade</h3>\n\n              <Form.Item label=\"Budget\">\n                <InputNumber\n                  size=\"large\"\n                  name=\"budget\"\n                  className=\"input-valor\"\n                  defaultValue={0}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$\", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n              <Form.Item label=\"Prazo\">\n                <DatePicker id=\"deadline\" format=\"DD/MM/YYYY\" />\n              </Form.Item>\n            </Input.Group>\n\n            <Row type=\"flex\" justify=\"center\">\n              <Col>\n                <Form.Item>\n                  <Button className=\"submit-button\" htmlType=\"submit\">\n                    Salvar\n                  </Button>\n                </Form.Item>\n              </Col>\n\n              <Col>\n                <Form.Item>\n                  <Button\n                    className=\"cancel-button\"\n                    onClick={() => this.setClientModalVisible(false)}\n                  >\n                    <u>Cancelar</u>\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n\n        {/* fim modal adicionar cliente */}\n\n        {/* titulo das colunas */}\n\n        <Row className=\"row-title\">\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[0]}\n            lg={5 * this.state.displayColumn[0]}\n          >\n            <p>\n              <br />\n              Clientes potenciais\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1} />\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[1]}\n            lg={5 * this.state.displayColumn[1]}\n          >\n            <p>\n              <br />\n              Clientes qualificados\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1} />\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[2]}\n            lg={5 * this.state.displayColumn[2]}\n          >\n            <p>\n              <br />\n              Propostas\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1} />\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[3]}\n            lg={5 * this.state.displayColumn[3]}\n          >\n            <p>\n              <br />\n              Contrato\n            </p>\n          </Col>\n        </Row>\n\n        {/* fim do titulo das colunas */}\n\n        {/* colunas */}\n\n        <Row className=\"row\">\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[0]}\n            lg={5 * this.state.displayColumn[0]}\n          >\n            {column0}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[1]}\n            lg={5 * this.state.displayColumn[1]}\n          >\n            {column1}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[2]}\n            lg={5 * this.state.displayColumn[2]}\n          >\n            {column2}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[3]}\n            lg={5 * this.state.displayColumn[3]}\n          >\n            {column3}\n          </Col>\n        </Row>\n\n        {/* fim das colunas */}\n      </div>\n    );\n  }\n}\nexport default Business;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Business from \"./components/Business/Business\";\n\n// class client {\n//   constructor(name, company) {\n//     this.name = name;\n//     this.company = company;\n//   }\n// }\n\nclass App extends Component {\n  state = {\n    page: \"business\",\n    clients: require(\"./baseClientes.json\")\n  };\n\n  newClient = client => {\n    this.state.clients.push(client);\n    this.setState(this.state);\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"App\">\n        {this.state.page === \"business\" ? <Business /> : \"\"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}