{"version":3,"sources":["components/Balloon/Balloon.js","components/Client/Client.js","components/Business/Business.js","components/Header/Header.js","components/Report/Report.js","App.js","serviceWorker.js","index.js"],"names":["TextArea","Balloon","state","addingTask","visible","modalVisible","tasks","handleSwitchTask","_this","setState","addingTasks","handleVisibleChange","handleSubmit","event","id","props","_event$target","target","task","time","responsible","obs","preventDefault","taskObj","value","taskName","childNodes","selectedIndex","text","when","document","getElementById","concat","responsibleName","length","_this2","this","i","taskList","react_default","a","createElement","map","key","es_button","className","onClick","form","es_form","onSubmit","Item","name","date_picker","defaultValue","moment","Date","now","format","label","size","time_picker","rows","row","type","justify","col","htmlType","popover","content","title","trigger","placement","onVisibleChange","Component","Client","editClientModalVisible","setEditClientModalVisible","handleSelect","_this$props","changeColumn","calculateUrgency","base","budget","val","substring","indexOf","getIconType","urgency","fill","color","_React$createElement","baseClientes","require","icon","popoverContent","onChange","disabled","hidden","modal","style","top","footer","Object","defineProperty","layout","input","Group","company","input_number","values","formatter","replace","parser","deadline","es_icon","theme","components_Balloon_Balloon","Business","clientModalVisible","firstRun","smallDisplay","window","innerWidth","displayColumn","columnCards","setClientModalVisible","handleResize","_this$state","shouldDiminish","shouldIncrease","fromColumn","toColumn","splice","push","console","log","stage","addEventListener","removeEventListener","column0","client","components_Client_Client","column1","column2","column3","xs","lg","Header","affix","offsetTop","switchPage","Report","span","offset","App","page","clients","newClient","components_Header_Header","components_Business_Business","components_Report_Report","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1206be15.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Balloon.css\";\nimport moment from \"moment\";\nimport {\n  Button,\n  Popover,\n  Form,\n  Input,\n  Row,\n  Col,\n  DatePicker,\n  TimePicker\n} from \"antd\";\nconst { TextArea } = Input;\n\nclass Balloon extends Component {\n  state = {\n    addingTask: false,\n    visible: false,\n    modalVisible: false,\n    tasks: [[], [], [], [], []]\n  };\n\n  handleSwitchTask = () => {\n    this.setState({\n      addingTask: !this.state.addingTasks\n    });\n  };\n\n  handleVisibleChange = visible => {\n    this.setState({\n      visible: visible\n    });\n\n    if (visible) {\n      this.state.addingTask = false;\n    }\n  };\n\n  handleSubmit = event => {\n    let { id } = this.props;\n    let { task, time, responsible, obs } = event.target;\n    let { tasks } = this.state;\n    event.preventDefault();\n\n    let taskObj = {\n      task: task.value,\n      taskName: task.childNodes[task.selectedIndex].text,\n      when: document.getElementById(`when${id}`).childNodes[0].childNodes[0]\n        .value,\n      time: time.value,\n      responsible: responsible.value,\n      responsibleName: responsible.childNodes[responsible.selectedIndex].text,\n      obs: obs.value\n    };\n\n    tasks[id][tasks[id].length] = taskObj;\n\n    this.setState({\n      addingTask: false\n    });\n  };\n\n  render() {\n    let { id } = this.props;\n    let { tasks } = this.state;\n\n    let i = 0;\n\n    const taskList = (\n      <div>\n        {tasks[id].length > 0 ? (\n          tasks[id].map(task => {\n            return (\n              <div key={i++}>\n                <Button className=\"task-list-button\">{task.taskName}</Button>\n                <br />\n                <br />\n              </div>\n            );\n          })\n        ) : (\n          <div>\n            Não há tarefas\n            <br />\n            <br />\n          </div>\n        )}\n        <Button className=\"button-card-tasks\" onClick={this.handleSwitchTask}>\n          Adicionar tarefa\n        </Button>\n      </div>\n    );\n\n    const form = (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Item className=\"select-etapa\">\n          <select name=\"task\">\n            <option value=\"call\">Ligação</option>\n            <option value=\"email\">E-mail</option>\n            <option value=\"meeting\">Reunião</option>\n            {/* <option>D</option> */}\n          </select>\n        </Form.Item>\n        <Form.Item>\n          <DatePicker\n            id={`when${this.props.id}`}\n            name=\"when\"\n            defaultValue={moment(\n              moment(Date.now()).format(\"DD/MM/YYYY\"),\n              \"DD/MM/YYYY\"\n            )}\n            format=\"DD/MM/YYYY\"\n            label=\"Em\"\n            size=\"large\"\n          />\n        </Form.Item>\n        <Form.Item>\n          <TimePicker\n            name=\"time\"\n            defaultValue={moment(moment(Date.now()).format(\"HH:00\"), \"HH:mm\")}\n            format={\"HH:mm\"}\n            size=\"large\"\n          />\n        </Form.Item>\n        <Form.Item className=\"select-etapa\" label=\"Atribuido à\">\n          <select name=\"responsible\">\n            <option value=\"general\">Geral</option>\n            <option value=\"private\">Particular</option>\n            <option value=\"public\">Público</option>\n            {/* <option>Filler</option> */}\n          </select>\n        </Form.Item>\n        <Form.Item className=\"select-etapa\">\n          <TextArea name=\"obs\" rows={4} />\n        </Form.Item>\n        <Row type=\"flex\" justify=\"end\">\n          <Col>\n            <Form.Item>\n              <Button className=\"submit-button\" htmlType=\"submit\">\n                Salvar\n              </Button>\n            </Form.Item>\n          </Col>\n\n          <Col>\n            <Form.Item>\n              <Button\n                className=\"cancel-button\"\n                onClick={() => this.handleVisibleChange(false)}\n              >\n                <u>Cancelar</u>\n              </Button>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    );\n\n    return (\n      <Popover\n        className=\"button-card-tasks\"\n        content={this.state.addingTask ? form : taskList}\n        title={null}\n        trigger=\"click\"\n        placement=\"right\"\n        visible={this.state.visible}\n        onVisibleChange={this.handleVisibleChange}\n      >\n        <Button className=\"button-card-tasks\">Tarefa ></Button>\n      </Popover>\n    );\n  }\n}\n\nexport default Balloon;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport {\n  Icon,\n  Row,\n  Col,\n  Button,\n  Popover,\n  Modal,\n  Form,\n  Input,\n  InputNumber,\n  DatePicker\n} from \"antd\";\nimport \"./Client.css\";\nimport Balloon from \"../Balloon/Balloon\";\n\nclass Client extends Component {\n  state = {\n    editClientModalVisible: false\n  };\n  setEditClientModalVisible = editClientModalVisible => {\n    this.setState({ editClientModalVisible });\n  };\n  handleSelect = event => {\n    const { id, col, changeColumn } = this.props;\n    const { value } = event.target;\n    // console.log(`${id} ${col} ${value}`);\n    event.target.value = \"\";\n    changeColumn(id, col, value);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setEditClientModalVisible(false);\n  };\n\n  calculateUrgency = (id, base) => {\n    let { budget } = base[id];\n\n    let val = budget.substring(budget.indexOf(\" \"), budget.length);\n\n    //console.log(val);\n\n    if (val > 150000) {\n      return \"high\";\n    }\n\n    if (val > 80000) {\n      return \"medium\";\n    }\n\n    if (val > 40000) {\n      return \"average\";\n    }\n\n    return \"low\";\n  };\n\n  getIconType = urgency => {\n    if (urgency === \"high\") {\n      return { type: \"info-circle\", fill: \"filled\", color: \"#F95F62\" };\n    }\n    if (urgency === \"medium\") {\n      return { type: \"up-circle\", fill: \"filled\", color: \"#FF9052\" };\n    }\n    if (urgency === \"average\") {\n      return { type: \"minus-circle\", fill: \"filled\", color: \"#FFD185\" };\n    }\n    if (urgency === \"low\") {\n      return { type: \"down-circle\", fill: \"filled\", color: \"#77D353\" };\n    }\n    return { type: \"\", fill: \"\", color: \"\" };\n  };\n\n  render() {\n    const { id } = this.props;\n    const baseClientes = require(\"../../baseClientes.json\");\n\n    let urgency = this.calculateUrgency(id, baseClientes);\n\n    let icon = this.getIconType(urgency);\n\n    const popoverContent = (\n      <div>\n        <br />\n        Mover <br />\n        <select defaultValue=\"\" onChange={this.handleSelect}>\n          <option value=\"\" disabled hidden>\n            Mover para...\n          </option>\n          <option value=\"0\">Clientes potenciais</option>\n          <option value=\"1\">Clientes qualificados</option>\n          <option value=\"2\">Propostas</option>\n          <option value=\"3\">Contrato</option>\n        </select>\n        <br />\n        <Button\n          onClick={() => this.setEditClientModalVisible(true)}\n          className=\"button-card-edit\"\n          icon=\"edit\"\n        >\n          <u>Editar</u>\n        </Button>\n        <Button className=\"button-card-delete\" icon=\"delete\">\n          <u>Excluir</u>\n        </Button>\n      </div>\n    );\n    return (\n      <div className=\"card\" id={`card${id}`}>\n        {/* modal editar cliente */}\n\n        <Modal\n          title=\"20px to Top\"\n          style={{ top: 20 }}\n          visible={this.state.editClientModalVisible}\n          footer={null}\n          title={null}\n          closable={false}\n          onOk={() => this.setEditClientModalVisible(false)}\n          onCancel={() => this.setEditClientModalVisible(false)}\n        >\n          <Form\n            className=\"form-add-client\"\n            layout=\"vertical\"\n            onSubmit={this.handleSubmit}\n          >\n            <h2>Novo cadastro</h2>\n            <Input.Group size=\"large\">\n              <Form.Item label=\"Nome do contato\">\n                <Input\n                  defaultValue={baseClientes[id].name}\n                  type=\"text\"\n                  name=\"name\"\n                />\n              </Form.Item>\n              <Form.Item label=\"Empresa / organização\">\n                <Input\n                  defaultValue={baseClientes[id].company}\n                  type=\"text\"\n                  name=\"company\"\n                />\n              </Form.Item>\n              <Form.Item label=\"Título do negócio\">\n                <Input\n                  defaultValue={baseClientes[id].title}\n                  type=\"text\"\n                  name=\"title\"\n                />\n              </Form.Item>\n              <Form.Item label=\"Valor\">\n                <InputNumber\n                  size=\"large\"\n                  className=\"input-valor\"\n                  name=\"values\"\n                  defaultValue={baseClientes[id].values.substring(\n                    baseClientes[id].values.indexOf(\" \"),\n                    baseClientes[id].values.length\n                  )}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n\n              <hr />\n              <br />\n              <h3>Prioridade</h3>\n\n              <Form.Item label=\"Budget\">\n                <InputNumber\n                  size=\"large\"\n                  name=\"budget\"\n                  className=\"input-valor\"\n                  defaultValue={baseClientes[id].budget.substring(\n                    baseClientes[id].budget.indexOf(\" \"),\n                    baseClientes[id].budget.length\n                  )}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n              <Form.Item label=\"Prazo\">\n                <DatePicker\n                  defaultValue={moment(baseClientes[id].deadline, \"DD/MM/YYYY\")}\n                  id=\"deadline\"\n                  format=\"DD/MM/YYYY\"\n                />\n              </Form.Item>\n            </Input.Group>\n\n            <Row type=\"flex\" justify=\"center\">\n              <Col>\n                <Form.Item>\n                  <Button className=\"submit-button\" htmlType=\"submit\">\n                    Salvar\n                  </Button>\n                </Form.Item>\n              </Col>\n\n              <Col>\n                <Form.Item>\n                  <Button\n                    className=\"cancel-button\"\n                    onClick={() => this.setEditClientModalVisible(false)}\n                  >\n                    <u>Cancelar</u>\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n\n        {/* fim modal editar cliente */}\n\n        <Row type=\"flex\" justify=\"space-between\">\n          <Col>\n            <p className=\"card-name\">{baseClientes[id].name}</p>\n          </Col>\n          <Col>\n            <Popover placement=\"right\" title={null} content=\"Urgência média\">\n              <Icon\n                style={{ color: icon.color }}\n                className=\"card-icon\"\n                type={icon.type}\n                theme=\"filled\"\n              />\n            </Popover>\n          </Col>\n        </Row>\n        <p className=\"card-company\">{baseClientes[id].company}</p>\n        <hr />\n        <p className=\"card-title\">{baseClientes[id].title}</p>\n        <p className=\"card-values\">{baseClientes[id].values}</p>\n\n        <Row type=\"flex\" justify=\"space-between\">\n          <Col>\n            <Popover\n              placement=\"bottom\"\n              title={null}\n              content={popoverContent}\n              trigger=\"click\"\n            >\n              <Button className=\"button-card-options\">\n                <u>Opções</u>\n              </Button>\n            </Popover>\n          </Col>\n\n          <Col>\n            <Balloon id={id} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nexport default Client;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  InputNumber,\n  Icon\n} from \"antd\";\nimport \"./Business.css\";\nimport Client from \"../Client/Client\";\n\nclass Business extends Component {\n  state = {\n    clientModalVisible: false,\n    firstRun: true,\n    smallDisplay: window.innerWidth < 992,\n    displayColumn: [1, 1, 1, 1],\n    columnCards: [[0, 1, 2, 3], [4], [], []]\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  setClientModalVisible = clientModalVisible => {\n    this.setState({ clientModalVisible });\n  };\n\n  handleResize = event => {\n    let { smallDisplay, firstRun } = this.state;\n    let shouldDiminish = window.innerWidth < 992;\n    shouldDiminish = shouldDiminish && !smallDisplay;\n    if (shouldDiminish) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 0, 0, 0]\n      });\n      return;\n    }\n\n    let shouldIncrease = window.innerWidth >= 992;\n    shouldIncrease = shouldIncrease && smallDisplay;\n\n    if (shouldIncrease) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 1, 1, 1]\n      });\n      return;\n    }\n    if (window.innerWidth < 992 && firstRun) {\n      this.setState({\n        firstRun: false,\n        smallDisplay: window.innerWidth < 992,\n        displayColumn: [1, 0, 0, 0]\n      });\n      return;\n    }\n  };\n\n  handleSelect = event => {\n    let { selectedIndex } = event.target;\n    let { displayColumn } = this.state;\n\n    for (let i = 0; i < displayColumn.length; i++) {\n      if (i === selectedIndex) {\n        displayColumn[i] = 1;\n      } else {\n        displayColumn[i] = 0;\n      }\n    }\n\n    this.setState(this.state);\n  };\n\n  changeColumn = (id, fromColumn, toColumn) => {\n    let { columnCards } = this.state;\n    if (fromColumn == toColumn) {\n      return;\n    }\n    columnCards[fromColumn].splice(columnCards[fromColumn].indexOf(id), 1);\n    columnCards[toColumn].push(id);\n    // console.log(`${id} ${fromColumn} ${toColumn}`);\n    // console.log(this.state.columnCards);\n    this.setState(this.state);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(event.target.name.value);\n    console.log(event.target.company.value);\n    console.log(event.target.title.value);\n    console.log(event.target.values.value);\n    console.log(event.target.stage.value);\n    console.log(event.target.budget.value);\n    console.log(\n      document.getElementById(\"deadline\").childNodes[0].childNodes[0].value\n    );\n  };\n\n  render() {\n    const column0 = this.state.columnCards[0].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={0}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column1 = this.state.columnCards[1].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={1}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column2 = this.state.columnCards[2].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={2}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    const column3 = this.state.columnCards[3].map(client => {\n      return (\n        <Client\n          key={client}\n          id={client}\n          col={3}\n          changeColumn={this.changeColumn}\n        />\n      );\n    });\n    // console.log(column1);\n    return (\n      <div id=\"negocios\">\n        <Button\n          name=\"add-client\"\n          type=\"primary\"\n          className=\"button-add-client\"\n          onClick={() => this.setClientModalVisible(true)}\n        >\n          Adicionar Cadastro\n        </Button>\n        <br />\n\n        {this.state.smallDisplay ? (\n          <div>\n            <br />\n            <select onChange={this.handleSelect}>\n              <option>Clientes potenciais</option>\n              <option>Clientes qualificados</option>\n              <option>Propostas</option>\n              <option>Contrato</option>\n            </select>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {/* modal adicionar cliente */}\n\n        <Modal\n          title=\"20px to Top\"\n          style={{ top: 20 }}\n          visible={this.state.clientModalVisible}\n          footer={null}\n          title={null}\n          closable={false}\n          onOk={() => this.setClientModalVisible(false)}\n          onCancel={() => this.setClientModalVisible(false)}\n        >\n          <Form\n            className=\"form-add-client\"\n            layout=\"vertical\"\n            onSubmit={this.handleSubmit}\n          >\n            <h2>Novo cadastro</h2>\n            <Input.Group size=\"large\">\n              <Form.Item label=\"Nome do contato\">\n                <Input type=\"text\" name=\"name\" />\n              </Form.Item>\n              <Form.Item label=\"Empresa / organização\">\n                <Input type=\"text\" name=\"company\" />\n              </Form.Item>\n              <Form.Item label=\"Título do negócio\">\n                <Input type=\"text\" name=\"title\" />\n              </Form.Item>\n              <Form.Item label=\"Valor\">\n                <InputNumber\n                  size=\"large\"\n                  className=\"input-valor\"\n                  name=\"values\"\n                  defaultValue={0}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n              <Form.Item label=\"Etapa\">\n                <div className=\"select-etapa\">\n                  <select name=\"stage\">\n                    <option>Clientes potenciais</option>\n                    <option>Clientes qualificados</option>\n                    <option>Propostas</option>\n                    <option>Contrato</option>\n                  </select>\n                </div>\n                {/* <Select defaultValue=\"lucy\" onChange=\"\">\n                  <Select.Option value=\"jack\">Jack</Select.Option>\n                  <Select.Option value=\"lucy\">Lucy</Select.Option>\n                  <Select.Option value=\"disabled\">Disabled</Select.Option>\n                  <Select.Option value=\"Yiminghe\">yiminghe</Select.Option>\n                </Select> */}\n              </Form.Item>\n              <hr />\n              <br />\n              <h3>Prioridade</h3>\n\n              <Form.Item label=\"Budget\">\n                <InputNumber\n                  size=\"large\"\n                  name=\"budget\"\n                  className=\"input-valor\"\n                  defaultValue={0}\n                  formatter={value =>\n                    `R$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={value => value.replace(\"R$ \", \"\").replace(\",\", \"\")}\n                />\n              </Form.Item>\n              <Form.Item label=\"Prazo\">\n                <DatePicker id=\"deadline\" format=\"DD/MM/YYYY\" />\n              </Form.Item>\n            </Input.Group>\n\n            <Row type=\"flex\" justify=\"center\">\n              <Col>\n                <Form.Item>\n                  <Button className=\"submit-button\" htmlType=\"submit\">\n                    Salvar\n                  </Button>\n                </Form.Item>\n              </Col>\n\n              <Col>\n                <Form.Item>\n                  <Button\n                    className=\"cancel-button\"\n                    onClick={() => this.setClientModalVisible(false)}\n                  >\n                    <u>Cancelar</u>\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n\n        {/* fim modal adicionar cliente */}\n\n        {/* titulo das colunas */}\n\n        <Row className=\"row-title\" type=\"flex\" justify=\"center\">\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[0]}\n            lg={5 * this.state.displayColumn[0]}\n          >\n            <p>\n              <br />\n              Clientes potenciais\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1}>\n            <Icon type=\"right\" />\n          </Col>\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[1]}\n            lg={5 * this.state.displayColumn[1]}\n          >\n            <p>\n              <br />\n              Clientes qualificados\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1} />\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[2]}\n            lg={5 * this.state.displayColumn[2]}\n          >\n            <p>\n              <br />\n              Propostas\n            </p>\n          </Col>\n          <Col className=\"separator-title\" xs={0} lg={1} />\n          <Col\n            className=\"column-title\"\n            xs={23 * this.state.displayColumn[3]}\n            lg={5 * this.state.displayColumn[3]}\n          >\n            <p>\n              <br />\n              Contrato\n            </p>\n          </Col>\n        </Row>\n\n        {/* fim do titulo das colunas */}\n\n        {/* colunas */}\n\n        <Row className=\"row\" type=\"flex\" justify=\"center\">\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[0]}\n            lg={5 * this.state.displayColumn[0]}\n          >\n            {column0}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[1]}\n            lg={5 * this.state.displayColumn[1]}\n          >\n            {column1}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[2]}\n            lg={5 * this.state.displayColumn[2]}\n          >\n            {column2}\n          </Col>\n          <Col className=\"separator\" xs={0} lg={1} />\n          <Col\n            className=\"column\"\n            xs={23 * this.state.displayColumn[3]}\n            lg={5 * this.state.displayColumn[3]}\n          >\n            {column3}\n          </Col>\n        </Row>\n\n        {/* fim das colunas */}\n      </div>\n    );\n  }\n}\nexport default Business;\n","import React, { Component } from \"react\";\nimport { Button, Row, Col, Affix } from \"antd\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <Affix offsetTop={0}>\n        <div id=\"header\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col>\n              <p>Logo</p>\n            </Col>\n            <Col>\n              <Button\n                className=\"button-nav\"\n                onClick={() => this.props.switchPage(\"business\")}\n              >\n                Negócios\n              </Button>\n\n              <Button\n                className=\"button-nav\"\n                onClick={() => this.props.switchPage(\"report\")}\n              >\n                Relatórios\n              </Button>\n              <Button className=\"button-search\" icon=\"search\" />\n            </Col>\n          </Row>\n        </div>\n      </Affix>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Button, Row, Col } from \"antd\";\nimport \"./Report.css\";\n\nclass Report extends Component {\n  render() {\n    return (\n      <div id=\"report\">\n        <Row type=\"flex\">\n          <Col span={18} offset={2}>\n            <h1>Novo relatório</h1>\n          </Col>\n        </Row>\n\n        <hr />\n        <Row type=\"flex\" justify=\"center\" className=\"selectors\">\n          <Col>\n            <select className=\"selector\">\n              <option>Cadastros</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Período</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Status</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Valor</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Orçamento</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Prazo</option>\n            </select>\n          </Col>\n          <Col>\n            <select className=\"selector\">\n              <option>Prioridade</option>\n            </select>\n          </Col>\n        </Row>\n        <br />\n        <Button type=\"primary\" className=\"button-export\">\n          Exportar\n        </Button>\n      </div>\n    );\n  }\n}\nexport default Report;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Business from \"./components/Business/Business\";\nimport Header from \"./components/Header/Header\";\nimport Report from \"./components/Report/Report\";\n\n// class client {\n//   constructor(name, company) {\n//     this.name = name;\n//     this.company = company;\n//   }\n// }\n\nclass App extends Component {\n  state = {\n    page: \"business\",\n    clients: require(\"./baseClientes.json\")\n  };\n\n  newClient = client => {\n    this.state.clients.push(client);\n    this.setState(this.state);\n  };\n\n  switchPage = page => {\n    this.setState({ page: page });\n  };\n\n  render() {\n    //console.log(this.state);\n    return (\n      <div className=\"App\">\n        <Header switchPage={this.switchPage} />\n        {this.state.page === \"business\" ? <Business /> : \"\"}\n        {this.state.page === \"report\" ? <Report /> : \"\"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}